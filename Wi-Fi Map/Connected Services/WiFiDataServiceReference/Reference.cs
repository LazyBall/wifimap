//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 15.0.28010.2019
// 
namespace Wi_Fi_Map.WiFiDataServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WiFiPointData", Namespace="http://schemas.datacontract.org/2004/07/Wi_Fi_Map_Data_Service")]
    public partial class WiFiPointData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private System.DateTimeOffset TimeStampField;
        
        private System.Collections.ObjectModel.ObservableCollection<Wi_Fi_Map.WiFiDataServiceReference.WiFiSignal> WiFiSignalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Wi_Fi_Map.WiFiDataServiceReference.WiFiSignal> WiFiSignals {
            get {
                return this.WiFiSignalsField;
            }
            set {
                if ((object.ReferenceEquals(this.WiFiSignalsField, value) != true)) {
                    this.WiFiSignalsField = value;
                    this.RaisePropertyChanged("WiFiSignals");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WiFiSignal", Namespace="http://schemas.datacontract.org/2004/07/Wi_Fi_Map_Data_Service")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Wi_Fi_Map.WiFiDataServiceReference.WiFiSignalWithGeoposition))]
    public partial class WiFiSignal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ChannelCenterFrequencyInKilohertzField;
        
        private string EncryptionField;
        
        private string MacAddressField;
        
        private double NetworkRssiInDecibelMilliwattsField;
        
        private string SsidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelCenterFrequencyInKilohertz {
            get {
                return this.ChannelCenterFrequencyInKilohertzField;
            }
            set {
                if ((this.ChannelCenterFrequencyInKilohertzField.Equals(value) != true)) {
                    this.ChannelCenterFrequencyInKilohertzField = value;
                    this.RaisePropertyChanged("ChannelCenterFrequencyInKilohertz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Encryption {
            get {
                return this.EncryptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EncryptionField, value) != true)) {
                    this.EncryptionField = value;
                    this.RaisePropertyChanged("Encryption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MacAddress {
            get {
                return this.MacAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MacAddressField, value) != true)) {
                    this.MacAddressField = value;
                    this.RaisePropertyChanged("MacAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NetworkRssiInDecibelMilliwatts {
            get {
                return this.NetworkRssiInDecibelMilliwattsField;
            }
            set {
                if ((this.NetworkRssiInDecibelMilliwattsField.Equals(value) != true)) {
                    this.NetworkRssiInDecibelMilliwattsField = value;
                    this.RaisePropertyChanged("NetworkRssiInDecibelMilliwatts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssid {
            get {
                return this.SsidField;
            }
            set {
                if ((object.ReferenceEquals(this.SsidField, value) != true)) {
                    this.SsidField = value;
                    this.RaisePropertyChanged("Ssid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WiFiSignalWithGeoposition", Namespace="http://schemas.datacontract.org/2004/07/Wi_Fi_Map_Data_Service")]
    public partial class WiFiSignalWithGeoposition : Wi_Fi_Map.WiFiDataServiceReference.WiFiSignal {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private System.DateTimeOffset TimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WiFiDataServiceReference.IWiFiDataService")]
    public interface IWiFiDataService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWiFiDataService/SaveWiFiNetworks")]
        System.Threading.Tasks.Task SaveWiFiNetworksAsync(Wi_Fi_Map.WiFiDataServiceReference.WiFiPointData wiFiPointData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWiFiDataService/GetWiFiNetworks", ReplyAction="http://tempuri.org/IWiFiDataService/GetWiFiNetworksResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wi_Fi_Map.WiFiDataServiceReference.WiFiSignalWithGeoposition>> GetWiFiNetworksAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWiFiDataServiceChannel : Wi_Fi_Map.WiFiDataServiceReference.IWiFiDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WiFiDataServiceClient : System.ServiceModel.ClientBase<Wi_Fi_Map.WiFiDataServiceReference.IWiFiDataService>, Wi_Fi_Map.WiFiDataServiceReference.IWiFiDataService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WiFiDataServiceClient() : 
                base(WiFiDataServiceClient.GetDefaultBinding(), WiFiDataServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IWiFiDataService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WiFiDataServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(WiFiDataServiceClient.GetBindingForEndpoint(endpointConfiguration), WiFiDataServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WiFiDataServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WiFiDataServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WiFiDataServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WiFiDataServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WiFiDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task SaveWiFiNetworksAsync(Wi_Fi_Map.WiFiDataServiceReference.WiFiPointData wiFiPointData) {
            return base.Channel.SaveWiFiNetworksAsync(wiFiPointData);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wi_Fi_Map.WiFiDataServiceReference.WiFiSignalWithGeoposition>> GetWiFiNetworksAsync() {
            return base.Channel.GetWiFiNetworksAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWiFiDataService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWiFiDataService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:53673/WiFiDataService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return WiFiDataServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IWiFiDataService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return WiFiDataServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IWiFiDataService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IWiFiDataService,
        }
    }
}
